/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package linearConversion;

/**
 *
 * @author erhal8376
 */
public class linearConversionForm extends javax.swing.JFrame {

    /**
     * Creates new form linearConversionForm
     */
    public linearConversionForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        header = new javax.swing.JLabel();
        prompt = new javax.swing.JLabel();
        input = new javax.swing.JTextField();
        inToCm = new javax.swing.JRadioButton();
        ftToCm = new javax.swing.JRadioButton();
        ydToM = new javax.swing.JRadioButton();
        miToKm = new javax.swing.JRadioButton();
        convert = new javax.swing.JButton();
        output = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        header.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        header.setForeground(new java.awt.Color(0, 0, 255));
        header.setText("Linear Conversion");

        prompt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        prompt.setText("Enter value to be converted:");

        input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputActionPerformed(evt);
            }
        });

        buttonGroup.add(inToCm);
        inToCm.setText("Inches to Centimeters");

        buttonGroup.add(ftToCm);
        ftToCm.setText("Feet to Centimeters");

        buttonGroup.add(ydToM);
        ydToM.setText("Yards to Meters");

        buttonGroup.add(miToKm);
        miToKm.setText("Miles to Kilometers");

        convert.setText("Convert");
        convert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertActionPerformed(evt);
            }
        });

        jMenu1.setText("File");
        menuBar.add(jMenu1);

        jMenu2.setText("Edit");
        menuBar.add(jMenu2);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ftToCm)
                            .addComponent(inToCm)
                            .addComponent(ydToM)
                            .addComponent(miToKm)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(header))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(output, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(prompt)
                                .addGap(18, 18, 18)
                                .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(convert)))))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(header)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(inToCm)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ftToCm)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ydToM)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(miToKm)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prompt)
                    .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(convert))
                .addGap(18, 18, 18)
                .addComponent(output, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputActionPerformed

    private void convertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertActionPerformed
         if (inToCm.isSelected()) { //calls inToCm function
                       double cm = inchesToCentimeters(Double.parseDouble(input.getText()));
                       output.setText(input.getText()+" inches = "+cm+" cm");
               }
         else if (ftToCm.isSelected()) { //calls ftToCm function
                       double cm = feetToCentimeters(Double.parseDouble(input.getText()));
                       output.setText(input.getText()+" feet = "+cm+" cm");
         }
         else if (ydToM.isSelected()) { //calls ydToM function
             double m = yardToMeters(Double.parseDouble(input.getText()));
             output.setText(input.getText()+" yards = "+m+" m");
         }
         else { //calls miToKm function
             double km = milesToKilometers(Double.parseDouble(input.getText()));
             output.setText(input.getText()+" miles = "+km+" km");
         }
    }//GEN-LAST:event_convertActionPerformed

    /**
    * Returns a centimeter value rounded to two decimal places after
    * converting from inches
    * @param in
    * @return cm
    */
    public double inchesToCentimeters(double in) {
        double cm = Math.round(in*254);
        return(cm/100);
    }
    
    /**
    * Returns a centimeter value rounded to two decimal places after
    * converting from feet
    * @param ft
    * @return cm
    */
    public double feetToCentimeters(double ft) {
        double cm = Math.round(ft*254*12);
        return(cm/100);
    }
    
    /**
    * Returns a meter value rounded to two decimal places after
    * converting from yards
    * @param yd
    * @return m
    */
    public double yardToMeters (double yd) {
        double m = Math.round(yd*91.44);
        return(m/100);
    }
    
    /**
    * Returns a kilometer value rounded to two decimal places after
    * converting from miles
    * @param mi
    * @return km
    */
    public double milesToKilometers (double mi) {
        double km = Math.round(mi*160.934);
        return(km/100);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(linearConversionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(linearConversionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(linearConversionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(linearConversionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new linearConversionForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JButton convert;
    private javax.swing.JRadioButton ftToCm;
    private javax.swing.JLabel header;
    private javax.swing.JRadioButton inToCm;
    private javax.swing.JTextField input;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JRadioButton miToKm;
    private javax.swing.JLabel output;
    private javax.swing.JLabel prompt;
    private javax.swing.JRadioButton ydToM;
    // End of variables declaration//GEN-END:variables

}
